" Modeline and Notes {
" vim: set foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"   This is the personal .vimrc.bundles file of Alexandrine Boissi√®re.
"   Based upon sfp13
"
" }

" Bundles {
    " Deps
        " Let NeoBundle manage NeoBundle
        NeoBundleFetch 'Shougo/neobundle.vim'

        NeoBundle 'MarcWeber/vim-addon-mw-utils'
        NeoBundle 'tomtom/tlib_vim'
        NeoBundle 'mileszs/ack.vim'

        if executable('ag')
            let g:ackprg = 'ag --nogroup --nocolor --column'
        endif

    " Use local bundles if available {
        if filereadable(expand("~/.vimrc.bundles.local"))
            source ~/.vimrc.bundles.local
        endif
    " }

    " In your .vimrc.bundles.local file"
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'neocomplcache', 'programming', 'javascript', 'node', 'less', 'html', 'misc']
    endif

    " General
    if count(g:spf13_bundle_groups, 'general')
        NeoBundle 'tpope/vim-surround'
        NeoBundle 'kien/ctrlp.vim'
        NeoBundle 'tpope/vim-unimpaired'
        NeoBundle 'vim-scripts/sessionman.vim'
        NeoBundle 'edsono/vim-matchit'
        NeoBundle 'Lokaltog/powerline'
        NeoBundle 'myusuf3/numbers.vim'
        NeoBundle 'nathanaelkane/vim-indent-guides'
        NeoBundle 'rgarver/Kwbd.vim'
        NeoBundle 'vim-scripts/BufOnly.vim'
        NeoBundle 'editorconfig/editorconfig-vim'
        "NeoBundle 'godlygeek/csapprox'
    endif

    " General Programming
    if count(g:spf13_bundle_groups, 'programming')
        NeoBundle 'scrooloose/syntastic'
        NeoBundle 'tpope/vim-fugitive'
        NeoBundle 'airblade/vim-gitgutter'
        NeoBundle 'mattn/webapi-vim'
        NeoBundle 'mattn/gist-vim'
        NeoBundle 'scrooloose/nerdcommenter'
        NeoBundle 'godlygeek/tabular'
        if executable('ctags')
            NeoBundle 'majutsushi/tagbar'
        endif
    endif

    " NerdTree
    if count(g:spf13_bundle_groups, 'nerdtree')
        NeoBundle 'scrooloose/nerdtree'
    endif

    " Snippets & AutoComplete
    if count(g:spf13_bundle_groups, 'snipmate')
        NeoBundle 'garbas/vim-snipmate'
        NeoBundle 'theasta/snipmate-snippets'
    elseif count(g:spf13_bundle_groups, 'neocomplcache')
        NeoBundle 'Shougo/neocomplcache'
        NeoBundle 'Shougo/neosnippet'
        NeoBundle 'theasta/neosnippet-snippets'
    endif

    " Javascript
    if count(g:spf13_bundle_groups, 'javascript')
        NeoBundle 'leshill/vim-json'
        NeoBundle 'pangloss/vim-javascript'
        NeoBundle 'briancollins/vim-jst'
        "NeoBundle 'nono/vim-handlebars'
        "NeoBundle 'juvenn/mustache.vim'
    endif

    " Node
    if count(g:spf13_bundle_groups, 'node')
        NeoBundle 'digitaltoad/vim-jade'
        NeoBundle 'mmalecki/vim-node.js'
    endif

    " less
    if count(g:spf13_bundle_groups, 'less')
        NeoBundle 'groenewege/vim-less'
    endif

    " Sass
    if count(g:spf13_bundle_groups, 'sass')
        NeoBundle 'tpope/vim-haml'
    endif

    " HTML
    if count(g:spf13_bundle_groups, 'html')
        "NeoBundle 'tpope/vim-ragtag'
        NeoBundle 'hail2u/vim-css3-syntax'
        "NeoBundle 'amirh/HTML-AutoCloseTag'
    endif

    " PHP
    if count(g:spf13_bundle_groups, 'php')
        NeoBundle 'vim-scripts/phpfolding.vim'
        NeoBundle 'shawncplus/phpcomplete.vim'
    endif

    " Python
    if count(g:spf13_bundle_groups, 'python')
        NeoBundle 'klen/python-mode'
        NeoBundle 'python.vim'
        NeoBundle 'python_match.vim'
        NeoBundle 'pythoncomplete'
    endif

" }
